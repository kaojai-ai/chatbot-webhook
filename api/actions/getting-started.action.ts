import * as line from '@line/bot-sdk';
import { LineService } from '../services/line/line.service';

const gettingStartedCarousel: line.TemplateMessage = {
  type: 'template',
  altText: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏ô‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à üíö',
  template: {
    type: 'carousel',
    columns: [
      {
        title: '‡∏ô‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á?',
        thumbnailImageUrl: 'https://kaojai.ai/images/generic_landscape_1.png',
        text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ üëã, ‡∏ô‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à üíö AI ChatBot ü§ñ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏ô‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å‡πÜ ‡∏°‡∏≤‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏ô‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞ ü•∞',
        actions: [
          {
            type: 'message',
            label: '‡∏ô‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á?',
            text: 'KaoJai ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á',
          },
          {
            type: 'message',
            label: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô',
            text: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
          }
        ],
      },
      {
        title: '‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô CheckSlip',
        thumbnailImageUrl: 'https://checkslip.kaojai.ai/images/blogs/danger-of-fake-slips.png',
        text: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤ CheckSlip ‡∏ú‡πà‡∏≤‡∏ô LINE',
        actions: [
          {
            type: 'message',
            label: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô',
            text: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô CheckSlip',
          },
          {
            type: 'message',
            label: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
            text: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô CheckSlip',
          }
        ],
      },
      {
        title: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Support',
        thumbnailImageUrl: 'https://kaojai.ai/images/support.png',
        text: '‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡∏°‡∏ã‡∏±‡∏û‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤',
        actions: [
          {
            type: 'message',
            label: '‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
            text: '‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
          },
          {
            type: 'message',
            label: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô',
            text: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
          }
        ],
      },
    ],
  },
};

export const sendGettingStartedCarousel = async (
  lineService: LineService,
  replyToken: string,
): Promise<void> => {
  await lineService.replyMessage(replyToken, [gettingStartedCarousel]);
};

export const getGettingStartedCarousel = (): line.TemplateMessage => gettingStartedCarousel;
